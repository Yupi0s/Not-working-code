from dotenv import load_dotenv

import contextlib
import logging
import os
import asyncio
import time

from aiogram.types import ChatJoinRequest
from aiogram.types import Message

from aiogram import Bot, Dispatcher, F

from aiogram.filters import Command, CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.storage.memory import MemoryStorage

from app.database.models import async_main
from app.database.requests import update_database
from app.database.models import async_session, User

from sqlalchemy import select

load_dotenv()
token_api = os.getenv('token_api')

CHANNEL_ID = -1002216392125
ADMIN_ID = 1445020010

class Reg(StatesGroup):
    name = State()

async def requests(chat_join: ChatJoinRequest, bot: Bot):
    msg = '–ü—Ä–∏–≤–µ—Ç!üëã\n\n–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∑–∞–π—Ç–∏ –≤ –≥—Ä—É–ø–ø—É, –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–π—Ç–∏ –Ω–µ–±–æ–ª—å—à—É—é –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—éüîê\n' \
          '–î–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤–∞–º –ø—Ä–æ—Å—Ç–æ –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –∫–æ–º–º–∞–Ω–¥—É /auth , –∑–∞—Ç–µ–º –≤–≤–µ—Å—Ç–∏ –≤–∞—à –Ω–∏–∫ –∏–∑ –∏–≥—Ä—ã Clash of Clans, ' \
          '–ø–æ—Å–ª–µ —á–µ–≥–æ –≤—ã –±—É–¥–µ—Ç–µ –ø—Ä–∏–Ω—è—Ç—ã –≤ –≥—Ä—É–ø–ø—É‚úÖ'
    await bot.send_message(chat_id=chat_join.from_user.id, text=msg)

async def rules(message: Message, state: FSMContext):
    await message.answer('–û–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏–µ:\n\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–ª–∞–Ω <strong>VINLAND</strong> !\n\n'
                         '–ù–∞—à –∫–ª–∞–Ω —Ä–∞–¥ –ª—é–±—ã–º –∏–≥—Ä–æ–∫–∞–º, –≤ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∞–∫—Ç–∏–≤–Ω—ã–º –∏ –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–º, –≥–æ—Ç–æ–≤—ã–º —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤–æ –≤—Å–µ–º –∏ –±—ã—Ç—å –≤–µ–∑–¥–µ)\n\n'
                         '–û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –∫–ª–∞–Ω–∞:\n'
                         '<blockquote>1. –ú–∞—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç—Å—è, –Ω–æ –≤ –º–µ—Ä—É\n\n'
                         '2. –£–≤–∞–∂–µ–Ω–∏–µ –∫–æ –≤—Å–µ–º –∏–≥—Ä–æ–∫–∞–º –∫–ª–∞–Ω–∞\n\n'
                         '3. –ê–∫—Ç–∏–≤–Ω–∞—è –∏–≥—Ä–∞(–Ω–µ–∞–∫—Ç–∏–≤ –±–æ–ª–µ–µ –Ω–µ–¥–µ–ª–∏ - –∫–∏–∫)\n\n'
                         '4. –°—Ç–∞—Ä–µ–π—à–∏–Ω–∞ –¥–∞—ë—Ç—Å—è –æ—Ç 260 –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–π\n\n'
                         '5. –°–æ—Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –¥–∞—ë—Ç—Å—è –ø–æ –¥–æ–≤–µ—Ä–∏—é –≥–ª–∞–≤—ã –∫–ª–∞–Ω–∞ –∏/–∏–ª–∏ –¥—Ä—É–≥–∏—Ö —Å–æ—Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–π\n\n'
                         '6. –ü—Ä–∏ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–∏ –≤ –Ω–∞—à—É –≥—Ä—É–ø–ø—É, –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –Ω–∏–∫</blockquote>\n'
                         '–í—Å–µ —Å–æ–±—ã—Ç–∏—è –≤ –∫–ª–∞–Ω–µ (–ò–ö, –ö–í, –õ–í–ö, –†–µ–π–¥—ã) –≤–µ–¥—É—Ç—Å—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –ø–æ –≥—Ä–∞—Ñ–∏–∫—É.\n\n–ì–ª–∞–≤–∞ –∫–ª–∞–Ω–∞: @Donny_Brasko_1',
                         parse_mode='HTML')

async def cmdstart(message: Message, state: FSMContext):
    start_message = '–ü—Ä–∏–≤–µ—Ç!üëã\n\n–î–∞–Ω–Ω—ã–π –±–æ—Ç —Å–æ–∑–¥–∞–Ω —Å —Ü–µ–ª—å—é –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–Ω—è—Ç–∏–∏ –∑–∞—è–≤–æ–∫ –ø–æ —Å—Å—ã–ª–∫–µ-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—é :)\n\n' \
                    '–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–º–∞–Ω–¥:\n/auth - –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è\n/rules - –ø—Ä–∞–≤–∏–ª–∞\n/info - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ'

    await message.answer(start_message)
    await state.clear()

async def info(message: Message, state: FSMContext):
    await message.answer('<strong>–î–∞–Ω–Ω—ã–π –±–æ—Ç —Å–æ–∑–¥–∞–≤–∞–ª—Å—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è –∫–ª–∞–Ω–∞ VINLAND.\n\n'
                         '–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º, –∫–∞—Å–∞—Ç–µ–ª—å–Ω–æ –±–æ—Ç–∞, –∞ —Ç–∞–∫–∂–µ –µ—Å–ª–∏ –≤—ã –Ω–∞—à–ª–∏ –æ—à–∏–±–∫—É –∏–ª–∏ –±–∞–≥, –ø–∏—à–∏—Ç–µ –≤–æ—Ç —Å—é–¥–∞\n'
                         'üîë@jumbapumba     ‚óÑ-----------‚ïØ</strong>', parse_mode='HTML')

async def auth(message: Message, state: FSMContext):
    await state.set_state(Reg.name)
    await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–∏–∫...')

async def auth_step_two(message: Message, state: FSMContext, bot: Bot):
    await state.update_data(name=message.text)
    async with async_session() as db_session:
        async with db_session.begin():
            stmt = select(User).filter(User.members == message.text)
            result = await db_session.execute(stmt)
            user = result.scalars().first()
            if user:
                await message.answer('–í—ã —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –∏ –ø—Ä–∏–Ω—è—Ç—ã –≤ –≥—Ä—É–ø–ø—É!')
                await bot.approve_chat_join_request(CHANNEL_ID, message.from_user.id)
            else:
                await message.answer('–ù–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.\n/auth')
            await state.clear()

async def start():
    await async_main()
    await update_database()
    print('–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–∏–ª—Å—è. \n–ù–∞—á–∏–Ω–∞—é –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ:')
    time.sleep(0.3)
    logging.basicConfig(level=logging.DEBUG,
                        format="%(asctime)s - [%(levelname)s] - %(name)s - "
                               "(%(filename)s).%(funcName)s(%(lineno)d) - %(message)s")

    bot: Bot = Bot(token=token_api)
    dp = Dispatcher(storage=MemoryStorage())

    dp.chat_join_request.register(requests, F.chat.id == CHANNEL_ID)
    dp.message.register(cmdstart, CommandStart())
    dp.message.register(rules, Command('rules'))
    dp.message.register(info, Command('info'))
    dp.message.register(auth, Command('auth'))
    dp.message.register(auth_step_two, F.text, Reg.name)

    try:
        await dp.start_polling(bot, allowed_updates=dp.resolve_used_update_types())
    except Exception as ex:
        logging.error(f'[Exception] - {ex}', exc_info=True)
    finally:
        await bot.session.close()

if __name__ == '__main__':
    with contextlib.suppress(KeyboardInterrupt, SystemExit):
        asyncio.run(start())
